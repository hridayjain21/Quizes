spring.application.name=Quiz-Service
spring.datasource.url=jdbc:mysql://localhost:3306/microservies
spring.datasource.username=springstudent
spring.datasource.password=springstudent
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
server.port=8085


eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/

resilience4j.circuitbreaker.instances.QuestionBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.QuestionBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.QuestionBreaker.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.QuestionBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.QuestionBreaker.slidingWindowType=count_based
resilience4j.circuitbreaker.instances.QuestionBreaker.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.QuestionBreaker.permittedNumberOfCallsInHalfOpenState=2
resilience4j.circuitbreaker.instances.QuestionBreaker.automaticTransitionFromOpenToHalfOpenEnabled=true


# Enable Retry and configure it for an instance named 'externalServiceRetry'
# Number of retry attempts
resilience4j.retry.instances.QuestionRetry.maxAttempts=3
resilience4j.retry.instances.QuestionRetry.registerHealthIndicator=true
# Wait time between retries
resilience4j.retry.instances.QuestionRetry.waitDuration=2s
# Exponential backoff
resilience4j.retry.instances.QuestionRetry.enableExponentialBackoff=false
# Backoff multiplier
resilience4j.retry.instances.QuestionRetry.exponentialBackoffMultiplier=2

# Retry on specific exceptions
#resilience4j.retry.instances.QuestionRetry.retryExceptions=java.io.IOException,java.util.concurrent.TimeoutException

# Ignore these exceptions (won't be retried)
resilience4j.retry.instances.QuestionRetry.ignoreExceptions=java.lang.NullPointerException,java.lang.IllegalArgumentException

# Event Logging (Optional - Logs retry attempts)
#resilience4j.retry.instances.QuestionRetry.event-consume



management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.metrics.enable.circuitbreakers=true
management.metrics.tags.application=quiz-service
management.endpoint.prometheus.enabled=true
management.health.probes.enabled=true
management.metrics.web.server.request.autotime.enabled=true
management.metrics.web.server.request.autotime.percentiles=0.5,0.95,0.99
management.metrics.web.server.request.autotime.percentiles-histogram=true

#Rabbit MQ
spring.





# Enable rate limiter for a specific instance (e.g., "QuestionService")
resilience4j.ratelimiter.instances.QuizServiceLimiter.limit-for-period=5
resilience4j.ratelimiter.instances.QuizServiceLimiter.limit-refresh-period=10s
resilience4j.ratelimiter.instances.QuizServiceLimiter.timeout-duration=500ms
resilience4j.ratelimiter.instances.QuizServiceLimiter.registerHealthIndicator=true
management.metrics.enable.ratelimiters=true

